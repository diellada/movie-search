!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);var r=function(e,n,t,r){return new(t||(t=Promise))((function(o,a){function c(e){try{i(r.next(e))}catch(e){a(e)}}function u(e){try{i(r.throw(e))}catch(e){a(e)}}function i(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(c,u)}i((r=r.apply(e,n||[])).next())}))},o=function(e,n){var t,r,o,a,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;c;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return c.label++,{value:a[1],done:!1};case 5:c.label++,r=a[1],a=[0];continue;case 7:a=c.ops.pop(),c.trys.pop();continue;default:if(!(o=(o=c.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){c=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){c.label=a[1];break}if(6===a[0]&&c.label<o[1]){c.label=o[1],o=a;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(a);break}o[2]&&c.ops.pop(),c.trys.pop();continue}a=n.call(e,c)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},a=function(e,n,t){!function(e,n){var t=document.getElementById("dropdown-list");t.onchange=function(){var r=t.options[t.selectedIndex].value;console.log(r),a(e,n,r)}}(e,n);var r,o,c=document.getElementById("movie-container");r=c,(o=new Range).selectNodeContents(r),o.deleteContents(),(t?function(e,n){return e.filter((function(e){return Number(e.Year)===Number(n)}))}(e,t):e).forEach((function(e){n.push(e.Year);var t=document.createElement("div");t.classList.add("card");var r=document.createElement("p");t.append(r),c.append(t),t.style.backgroundImage="url("+e.Poster+")",r.innerHTML=e.Title+" ("+e.Year+")"}))};document.getElementById("search-button").addEventListener("click",(function(){var e,n=document.getElementById("search-bar"),t=[];(e=n.value,r(void 0,void 0,void 0,(function(){return o(this,(function(n){switch(n.label){case 0:return[4,fetch("https://www.omdbapi.com/?s="+e+"&apikey=152b30dd")];case 1:return[4,n.sent().json()];case 2:return[2,n.sent()]}}))}))).then((function(e){var n=e.Search;a(n,t,void 0),function(e){e.sort((function(e,n){return e-n}));var n=document.getElementById("dropdown-list");$("#dropdown-list").empty(),n.style.display="block",e.forEach((function(e){var t=document.createElement("option");t.classList.add("year-element"),n.append(t),t.innerText=e}))}(t)})).catch((function(e){console.log(e),document.getElementById("movie-container").innerText="Please enter a valid search parameter"}))}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,